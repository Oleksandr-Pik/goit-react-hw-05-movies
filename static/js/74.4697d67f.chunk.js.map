{"version":3,"file":"static/js/74.4697d67f.chunk.js","mappings":"iOAiBE,EAfgB,SAACA,GACjB,IAAMC,EAAU,CACdC,OAAQ,MACRC,IAAK,4CACLC,OAAQ,CAACJ,MAAOA,EAAOK,cAAe,QAASC,SAAU,QAASC,KAAM,KACxEC,QAAS,CACPC,OAAQ,mBACRC,cAAe,+NAInB,OAAOC,EAAAA,EAAAA,QACIV,EACX,E,SCuDF,EAlEe,WAAO,IAADW,EACnBC,GAA4BC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GAClBI,GAAWC,EAAAA,EAAAA,MACjBC,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAP,EAAAA,EAAAA,GAAAK,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAC9BvB,EAAiC,QAA5BY,EAAGY,EAAaE,IAAI,gBAAQ,IAAAd,EAAAA,EAAI,IAE3Ce,EAAAA,EAAAA,YAAU,WACH3B,GACL4B,EAAU5B,GACP6B,MAAK,SAAUC,GACdZ,EAAUY,EAASC,KAAKC,SACxBC,QAAQC,IAAIJ,EAASC,KAAKC,QAC5B,IACCG,OAAM,SAAUC,GACfH,QAAQG,MAAMA,EAChB,GACJ,GAAG,CAACpC,IA2BJ,OACEqC,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEF,EAAAA,EAAAA,MAAA,QAAMG,KAAK,SAASC,SAnBH,SAAAC,GACnBA,EAAIC,iBAWJV,QAAQC,IAAI,iBACd,EAM+CK,SAAA,EACzCK,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,MAAO9C,EAAO+C,SA5Bb,SAAAL,GACxB,IAAMM,EAAaN,EAAIO,OAAOH,MAC9B,GAAmB,KAAfE,EACF,OAAOvB,EAAgB,CAAC,GAE1BA,EAAgB,CAAEzB,MAAOgD,GAC3B,KAuBMJ,EAAAA,EAAAA,KAAA,UAAQC,KAAK,SAAQN,SAAC,cAEvBtB,IACC2B,EAAAA,EAAAA,KAAA,MAAAL,SACGtB,EAAOiC,KAAI,SAAAC,GACV,OACEP,EAAAA,EAAAA,KAAA,MAAAL,UACEK,EAAAA,EAAAA,KAACQ,EAAAA,GAAI,CAACC,GAAE,GAAAC,OAAKH,EAAMI,IAAMC,MAAO,CAAEC,KAAMtC,GAAWoB,SAChDY,EAAMO,SAFFP,EAAMI,GAMnB,QAKV,C","sources":["servises/getMovies.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst getMovies = (query) => {\n  const options = {\n    method: 'GET',\n    url: 'https://api.themoviedb.org/3/search/movie',\n    params: {query: query, include_adult: 'false', language: 'uk-UA', page: '1'},\n    headers: {\n      accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0Y2RhM2MyMjFlZjA3NDBhMDFlNmMwZTllNzdkNzJkMCIsInN1YiI6IjY1OTU0Y2UwYTY5OGNmNWExMzQzYTA1ZiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.KQiqVQlKVKjNnvB8aixow-b7QW092Q8cG4KYkgdhwxo'\n    }\n  };\n\n  return axios\n    .request(options)\n  };\n\n  export default getMovies;","import React, { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport getMovies from 'servises/getMovies';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    if (!query) return;\n    getMovies(query)\n      .then(function (response) {\n        setMovies(response.data.results);\n        console.log(response.data.results);\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  }, [query]);\n\n  const updateQueryString = evt => {\n    const queryValue = evt.target.value;\n    if (queryValue === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query: queryValue });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    // if (!query) return;\n    // getMovies(query)\n    //   .then(function (response) {\n    //     setMovies(response.data.results);\n    //     console.log(response.data.results);\n    //   })\n    //   .catch(function (error) {\n    //     console.error(error);\n    //   });\n\n    console.log('clik on search');\n  };\n\n  // console.log(location);\n\n  return (\n    <>\n      <form role=\"search\" onSubmit={handleSubmit}>\n        <input type=\"text\" value={query} onChange={updateQueryString} />\n        <button type=\"submit\">Search</button>\n      </form>\n      {movies && (\n        <ul>\n          {movies.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link to={`${movie.id}`} state={{ from: location }}>\n                  {movie.title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n"],"names":["query","options","method","url","params","include_adult","language","page","headers","accept","Authorization","axios","_searchParams$get","_useState","useState","_useState2","_slicedToArray","movies","setMovies","location","useLocation","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","get","useEffect","getMovies","then","response","data","results","console","log","catch","error","_jsxs","_Fragment","children","role","onSubmit","evt","preventDefault","_jsx","type","value","onChange","queryValue","target","map","movie","Link","to","concat","id","state","from","title"],"sourceRoot":""}